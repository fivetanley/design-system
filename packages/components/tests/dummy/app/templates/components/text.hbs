{{page-title "Text Component"}}

<h2 class="dummy-h2">Text</h2>

<section>
  <h3 class="dummy-h3" id="overview"><a href="#overview" class="dummy-link-section">§</a> Overview</h3>
  <p class="dummy-paragraph">The
    <code class="dummy-code">Hds::Text</code>
    component has been created to simplify the way in which developers can apply typographic styles to their UI-related
    code. There is no equivalent component in Figma – typographic definitions are applied via "styles", not components –
    so this should be considered a "helper component" for developers.</p>
</section>

<section>
  <h3 class="dummy-h3" id="component-api"><a href="#component-api" class="dummy-link-section">§</a> Component API</h3>
  <p class="dummy-paragraph" id="component-api-text">Here is the API for the component:</p>
  <dl class="dummy-component-props" aria-labelledby="component-api-text">
    <dt>variant <code>enum</code></dt>
    <dd>
      <p>The variant ("style") for the text.</p>
      <p>Acceptable values:</p>
      <ol>
        {{#each @model.AVAILABLE_VARIANTS as |variant|}}
          <li>{{variant}}</li>
        {{/each}}
      </ol>
      <p>Notice: the default value, if no
        <code class="dummy-code">@variant</code>
        argument is provided, depends on the
        <code class="dummy-code">@tag</code>
        argument:</p>
      <ol class="dummy-text-component-api-defaults">
        {{#each-in @model.MAPPING_TAG_TO_STYLE as |tag style|}}
          <li>{{tag}} → {{style}}</li>
        {{/each-in}}
      </ol>
      <p><em><strong>Important</strong>: only only certain combinations of "size" and "weight" are recommended; if you
          need a different combination please speak with the Design System team.</em></p>
      <p><em>You can find the design specs on typography in
          <a
            href="https://www.figma.com/file/oQsMzMMnynfPWpMEt91OpH/HDS-Product---Foundations?node-id=1262%3A9192"
            target="_blank"
            rel="noopener noreferrer"
          >the "core" Figma library</a></em></p>
    </dd>
    <dt>tag <code>enum</code></dt>
    <dd>
      <p>The html tag to use in the dynamic render of the component.</p>
      <p>Acceptable values:</p>
      <ol>
        <li>h1</li>
        <li>h2</li>
        <li>h3</li>
        <li>h4</li>
        <li>h5</li>
        <li>h6</li>
        <li>p</li>
        <li>span</li>
        <li>li</li>
        <li>code</li>
        <li>pre</li>
        <li>div</li>
      </ol>
      <p>Notice: the default value, if no
        <code class="dummy-code">@tag</code>
        argument is provided, depends on the
        <code class="dummy-code">@variant</code>
        argument:</p>
      <ol class="dummy-text-component-api-defaults">
        {{#each-in @model.MAPPING_STYLE_TO_TAG as |size tag|}}
          <li>{{size}} → &lt;{{tag}}&gt;</li>
        {{/each-in}}
      </ol>
    </dd>
    <dt>align <code>enum</code></dt>
    <dd>
      <p>The alignment of the text</p>
      <p>Acceptable values:</p>
      <ol>
        {{#each @model.AVAILABLE_ALIGNS as |align|}}
          <li>{{align}}</li>
        {{/each}}
      </ol>
      <p>If no
        <code class="dummy-code">@align</code>
        argument is provided, the text will simply follow (inherit) the alignment of the parent container.</p>
    </dd>
    <dt>color <code>enum</code></dt>
    <dd>
      <p>The color (foreground) to apply to the text.</p>
      <p>Acceptable predefined values:</p>
      <ol>
        {{#each @model.AVAILABLE_COLORS as |color|}}
          <li>{{color}}</li>
        {{/each}}
      </ol>
      <p>It's also possible to provide a custom color using the same
        <code class="dummy-code">@color</code>
        argument. For details on how to do it see the
        <a href="#how-to-use">"How to use</a>
        section above.</p>
      <p>If no
        <code class="dummy-code">@color</code>
        argument is provided, the text will simply inherit the
        <code class="dummy-code">text-color</code>
        of the parent container.</p>
    </dd>
    <dt>"yield"</dt>
    <dd>
      <p>Elements passed as children of this component are yielded inside the
        <code class="dummy-code">@tag</code>
        element.</p>
    </dd>
    <dt>...attributes</dt>
    <dd>
      <p><code class="dummy-code">...attributes</code> spreading is supported on this component.</p>
    </dd>
  </dl>
</section>

<section>
  <h3 class="dummy-h3" id="how-to-use"><a href="#how-to-use" class="dummy-link-section">§</a> How to use</h3>
  <p class="dummy-paragraph">The suggested way to apply a typographic style ("variant") to a UI element is using the
    <strong>Hds::Text</strong>
    component.</p>
  <p class="dummy-paragraph">In those cases where it's not possible to use that component, or a specific combination of
    <em>font-family/font-size/line-height/font-weight</em>
    is needed, it's possible to use typographic
    <strong>design tokens</strong>
    (CSS variables) or
    <strong>CSS helper classes</strong>
    to achieve the desired result. Refer to the documentation page for the
    <a href="/foundations/typography">Typography</a>
    foundations for more details on how to use it.
  </p>

  <h4 class="dummy-h4">Basic use</h4>
  <p class="dummy-paragraph">The most basic invocation is done providing a
    <code class="dummy-code">@tag</code>
    argument to specify the HTML tag to use and a
    <code class="dummy-code">@variant</code>
    argument to specify the "style" (<code class="dummy-code">group/size/weight</code>) that needs to be applied to it</p>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Text @tag="h3" @variant="display/200/semibold">This is a "h3" tag styled as "display/200/semibold"</Hds::Text>
    '
  />
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Text @tag="h3" @variant="display/200/semibold">This is a "h3" tag styled as "display/200/semibold"</Hds::Text>
  <p class="dummy-paragraph"><em>Notice: not all tags are supported; for the list of supported
      <code class="dummy-code">@tag</code>
      arguments see the
      <a href="#component-api">Component API</a>
      section.</em></p>
  <p class="dummy-paragraph"><em><strong>Important</strong>: if the
      <code class="dummy-code">@tag</code>
      argument provided does not match one of the supported ones, the component will fall back to use a
      <code class="dummy-code">&lt;div&gt;</code>
      tag.</em></p>

  <p class="dummy-paragraph">If no
    <code class="dummy-code">@tag</code>
    argument is provided, the component will automatically assign one based on the
    <code class="dummy-code">@variant</code>
    argument:</p>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Text @variant="body/200/semibold">This is a "p" tag styled as "body/200/semibold"</Hds::Text>
    '
  />
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Text @variant="body/200/semibold">This is a "p" tag styled as "body/200/semibold"</Hds::Text>
  <p class="dummy-paragraph"><em>Notice: for the list of default associations
      <code class="dummy-code">@variant → @tag</code>
      see the
      <a href="#component-api">Component API</a>
      section.</em></p>

  <p class="dummy-paragraph">In a similar way, if no
    <code class="dummy-code">@variant</code>
    argument is provided, the component will automatically assign one based on the
    <code class="dummy-code">@tag</code>
    argument:</p>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Text @tag="code">This is a "code" tag that will be styled as "code/200/regular"</Hds::Text>
    '
  />
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Text @tag="code">This is a "code" tag that will be styled as "code/200/regular"</Hds::Text>
  <p class="dummy-paragraph"><em>Notice: for the list of default associations
      <code class="dummy-code">@tag → @variant</code>
      see the
      <a href="#component-api">Component API</a>
      section.</em></p>

  <h4 class="dummy-h4">Text alignment</h4>
  <p class="dummy-paragraph">You can use the
    <code class="dummy-code">@align</code>
    argument to change the alignment of the text:
  </p>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Text @tag="p" @variant="body/300/regular" @align="center">This is a "p" tag styled as "body/300/regular" and "center" aligned</Hds::Text>
    '
  />
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Text @tag="p" @variant="body/300/regular" @align="center">This is a "p" tag styled as "body/300/regular" and
    "center" aligned</Hds::Text>
  <p class="dummy-paragraph"><em>Notice: by default, if no
      <code class="dummy-code">@align</code>
      argument is provided, the text simply follows (inherits) the alignment of the parent container.</em></p>

  <h4 class="dummy-h4">Color</h4>
  <p class="dummy-paragraph">You can apply a pre-defined "foreground" color to the text using the
    <code class="dummy-code">@color</code>
    argument:
  </p>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Text @tag="p" @variant="body/300/regular" @color="highlight">This is a "p" tag styled as "body/300/regular" and with a "highlight" color</Hds::Text>
    '
  />
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Text @tag="p" @variant="body/300/regular" @color="highlight">This is a "p" tag styled as "body/300/regular" and
    with a "highlight" color</Hds::Text>
  <p class="dummy-paragraph">It is also possible to apply a "custom" color to the text providing a valid CSS
    <code class="dummy-code">text-color</code>
    style to the
    <code class="dummy-code">@color</code>
    argument:
  </p>
  {{! prettier-ignore-start }}
  <CodeBlock
    @language="markup"
    @code='
      <Hds::Text @tag="p" @color="var(--token-color-palette-purple-400)">This is a "p" tag with "var(--token-color-palette-purple-400)" color</Hds::Text>
      <Hds::Text @tag="p" @color="rebeccapurple">This is a "p" tag with "rebeccapurple" color</Hds::Text>
      <Hds::Text @tag="p" @color="rgb(55, 0, 154)">This is a "p" tag with "rgb(55, 0, 154)" color</Hds::Text>
    '
  />
  {{! prettier-ignore-end }}
  <p class="dummy-paragraph">Renders to:</p>
  <Hds::Text @tag="p" @color="var(--token-color-palette-purple-400)">This is a "p" tag with
    "var(--token-color-palette-purple-400)" color</Hds::Text>
  <Hds::Text @tag="p" @color="rebeccapurple">This is a "p" tag with "rebeccapurple" color</Hds::Text>
  <Hds::Text @tag="p" @color="rgb(55, 0, 154)">This is a "p" tag with "rgb(55, 0, 154)" color</Hds::Text>

  <p class="dummy-paragraph"><em>Notice: by default, if no
      <code class="dummy-code">@color</code>
      argument is provided, the text simply inherits the
      <code class="dummy-code">text-color</code>
      of the parent container.</em></p>

</section>

<section>
  <h3 class="dummy-h3" id="design-guidelines"><a href="#design-guidelines" class="dummy-link-section">§</a>
    Design guidelines</h3>
  <p class="dummy-paragraph">There is no equivalent
    <code class="dummy-code">Hds::Text</code>
    component in Figma, because typography in Figma is applied via "styles" (they correspond to the
    <code class="dummy-code">@variant</code>
    argument). You can see the available styles in the
    <a
      href="https://www.figma.com/file/oQsMzMMnynfPWpMEt91OpH/HDS-Product---Foundations?node-id=1262%3A9192"
      target="_blank"
      rel="noopener noreferrer"
    >Figma "Core" UI Kit</a>.
  </p>
</section>

<section>
  <h3 class="dummy-h3" id="writing-guidelines"><a href="#writing-guidelines" class="dummy-link-section">§</a>
    Writing guidelines</h3>
  <p class="dummy-paragraph">HashiCorp has general writing guidelines for copy standards e.g. capitalization and
    punctuation.</p>
  <p class="dummy-paragraph">
    <a
      href="https://docs.google.com/document/d/1ABNkYIp6aLwPYNpuYOFcDFBFCcnH_4ePRaLP-gD_tKE/edit#heading=h.w9d2qpiz1vpb"
      target="_blank"
      rel="noopener noreferrer"
    >Please refer to this document for more details</a>.</p>
</section>

<section data-test-percy>
  <h3 class="dummy-h3" id="showcase"><a href="#showcase" class="dummy-link-section">§</a> Showcase</h3>

  <h4 class="dummy-h4">Size</h4>
  <div class="dummy-text-size-sample">
    {{#each-in @model.AVAILABLE_GROUP_SIZE_WEIGHT_COMBINATIONS as |group_size weights|}}
      <h5 class="dummy-h6">{{group_size}}</h5>
      {{#each weights as |weight|}}
        <Hds::Text @variant={{(concat group_size "/" weight)}}>The fox jumped over the lazy dog ({{weight}})</Hds::Text>
      {{/each}}
    {{/each-in}}
  </div>

  <h4 class="dummy-h4">Tag</h4>
  <div class="dummy-text-tag-sample">
    <div>
      <Hds::Text @variant="display/200/semibold" @tag="h1">Display200 applied to an &lt;h1&gt; tag</Hds::Text>
      <Hds::Text @variant="display/200/semibold" @tag="p">Display200 applied to a &lt;p&gt; tag</Hds::Text>
      <Hds::Text @variant="display/200/semibold" @tag="div">Display200 applied to a &lt;div&gt; tag</Hds::Text>
    </div>
    <div>
      <Hds::Text @variant="body/200/regular" @tag="h1">Body200 applied to an &lt;h1&gt; tag</Hds::Text>
      <Hds::Text @variant="body/200/regular" @tag="p">Body200 applied to a &lt;p&gt; tag</Hds::Text>
      <Hds::Text @variant="body/200/regular" @tag="div">Body200 applied to a &lt;div&gt; tag</Hds::Text>
    </div>
    <div>
      <Hds::Text @variant="code/200/regular" @tag="code">Code200 applied to an &lt;code&gt; tag</Hds::Text>
      <Hds::Text @variant="code/200/regular" @tag="pre">Code200 applied to a &lt;pre&gt; tag</Hds::Text>
      <Hds::Text @variant="code/200/regular" @tag="span">Code200 applied to a &lt;span&gt; tag</Hds::Text>
    </div>
  </div>

  <h4 class="dummy-h4">Align</h4>
  <div class="dummy-text-align-sample">
    {{#each @model.AVAILABLE_ALIGNS as |align|}}
      <div class="dummy-text-align-sample__container">
        <Hds::Text @variant="body/200/regular" @align={{align}}>
          {{capitalize align}}
          aligned text
        </Hds::Text>
      </div>
    {{/each}}
  </div>

  <h4 class="dummy-h4">Color</h4>
  <h5 class="dummy-h5">Pre-defined colors</h5>
  <div class="dummy-text-color-sample">
    {{#each @model.AVAILABLE_COLORS as |color|}}
      <div class="dummy-text-color-sample__container dummy-text-color-sample__container--{{color}}">
        <Hds::Text @variant="body/200/regular" @color={{color}}>
          Text with "{{color}}" color
        </Hds::Text>
      </div>
    {{/each}}
  </div>
  <h5 class="dummy-h5">Custom colors</h5>
  <div class="dummy-text-color-sample">
    <div class="dummy-text-color-sample__container">
      <Hds::Text @variant="body/200/regular" @color="#FF0000">
        Text with "#FF0000" color
      </Hds::Text>
    </div>
    <div class="dummy-text-color-sample__container">
      <Hds::Text @variant="body/200/regular" @color="var(--token-color-palette-purple-400)">
        Text with "token-color-palette-purple-400" color
      </Hds::Text>
    </div>
    {{! <div class="dummy-text-color-sample__container">
      <Hds::Text @size="body-200" @color="!@£">
        Text with non-valid color
      </Hds::Text>
    </div> }}
  </div>

</section>